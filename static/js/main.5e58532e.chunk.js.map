{"version":3,"sources":["comp/Nav.jsx","comp/TopBar.jsx","comp/DeleteModal.jsx","comp/EditModal.jsx","comp/UserRow.jsx","hooks/useSearch.jsx","views/UserControl.jsx","comp/BalanceRow.jsx","views/Balance.jsx","views/Home.jsx","views/Settings.jsx","App.jsx","index.js"],"names":["Nav","useState","listOpen","setListOpen","className","src","alt","to","activeClassName","type","onClick","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","TopBar","EditModal","showModal","setShowModal","toggleModal","action","method","name","UserRow","props","fullName","userName","comments","rights","status","DeleteModal","useSearch","value","setValue","onChange","event","target","UserControl","users","setUsers","key","dir","sortConfig","setSortConfig","search","mapUsers","user","useEffect","UserData","map","result","Fuse","minMatchCharLength","threshold","keys","sortedUsers","a","item","sort","b","requestSort","getClassName","placeholder","BalanceRow","code","color","prize","storage","ordered","sold","Balance","items","setItems","loading","setLoading","mapBalance","MockData","cx","cy","r","sortedItems","Home","Settings","App","path","exact","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5e58532e.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\n\nconst Nav = () => {\n    const [ listOpen, setListOpen ] = useState(false);\n\n    return (\n        <>\n            <div className=\"flex flex-col h-full bg-primary max-w-xxs\">\n                <div className=\"flex items-center min-h-xxxs max-h-xxxs p-5 max-w-xxs\">\n                    <img src=\"/uni-client-app/clogo.png\" alt=\"logo\" />\n                </div>\n                <div className=\"flex flex-col\">\n                    <NavLink to=\"/uni-client-app/home\" className=\"nav-link\" activeClassName=\"bg-primary-dark\">\n                        Home\n                    </NavLink>\n                    { /* onClick event for opening and closing the sublinks */ }\n                    <button type=\"button\" className=\"nav-link flex items-center outline-none focus:outline-none text-left\" onClick={ () => setListOpen(!listOpen) }>\n                        Product lists\n                        { listOpen ? (\n                            <svg className=\"h-5 w-5 ml-2\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"3\" d=\"M5 15l7-7 7 7\" />\n                            </svg>\n                        ) : (\n                            <svg className=\"h-5 w-5 ml-2\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"3\" d=\"M19 9l-7 7-7-7\" />\n                            </svg>\n                        ) }\n                    </button>\n                    { /* If true, show sublinks, else hide sublinks */ }\n                    <div className={ listOpen ? 'flex flex-col' : 'hidden' }>\n                        <NavLink to=\"/uni-client-app/balance\" className=\"nav-sublink\" activeClassName=\"bg-primary-dark\">\n                            Product info\n                        </NavLink>\n                    </div>\n                    <NavLink to=\"/uni-client-app/user\" className=\"nav-link\" activeClassName=\"bg-primary-dark\">\n                        User management\n                    </NavLink>\n                    <NavLink to=\"/uni-client-app/settings\" className=\"nav-link\" activeClassName=\"bg-primary-dark\">\n                        Settings\n                    </NavLink>\n                </div>\n                <div className=\"nav-link mt-auto mb-4\">\n                    <p className=\"\">\n                        Log out\n                    </p>\n                </div>\n            </div>\n        </>\n    );\n};\n\nexport default Nav;\n","import React from 'react';\n\nconst TopBar = () => {\n    return (\n        <div className=\"min-h-xxxs max-h-xxxs py-4 bg-primary\">\n            <div className=\"flex items-center justify-end h-full px-6 mx-auto text-white font-medium tracking-wide\" />\n        </div>\n    );\n};\n\nexport default TopBar;\n","/* eslint-disable jsx-a11y/click-events-have-key-events */\n/* eslint-disable jsx-a11y/no-static-element-interactions */\nimport React, { useState } from 'react';\n\nconst EditModal = () => {\n    const [ showModal, setShowModal ] = useState(false);\n\n    const toggleModal = () => {\n        setShowModal(!showModal);\n    };\n\n    return (\n        <>\n            <button type=\"button\" onClick={ toggleModal }>\n                <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"1\" d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\" />\n                </svg>\n            </button>\n            { showModal ? (\n                <>\n                    <div\n                        className=\"modal_container\"\n                    >\n                        <div className=\"modal\">\n                            { /* content */ }\n                            <div className=\"section\">\n                                { /* header */ }\n                                <div className=\"modal_header\">\n                                    <button\n                                        type=\"button\"\n                                        className=\"p-1 ml-auto bg-transparent border-0 float-right leading-none font-semibold outline-none focus:outline-none\"\n                                        onClick={ toggleModal }\n                                    >\n                                        <span className=\"bg-transparent h-6 w-6 text-2xl block outline-none focus:outline-none\">\n                                            ×\n                                        </span>\n                                    </button>\n                                </div>\n                                { /* body */ }\n                                <div className=\"text-center\">\n                                    <p className=\"my-4 text-gray-800 text-lg font-medium\">\n                                        Are you sure you want to delete this user?\n                                    </p>\n                                </div>\n                                { /* footer */ }\n                                <div className=\"flex items-center justify-center\">\n                                    <button\n                                        className=\"bg-red-700 text-white font-bold uppercase px-6 py-3 rounded text-sm border border-red-700 hover:bg-red-800 m-2 shadow\"\n                                        type=\"button\"\n                                        onClick={ toggleModal }\n                                    >\n                                        Delete\n                                    </button>\n                                    <button\n                                        className=\"bg-white text-gray-700 font-bold uppercase px-6 py-3 rounded text-sm border border-gray-300 hover:bg-gray-100 m-2 shadow\"\n                                        type=\"button\"\n                                        onClick={ toggleModal }\n                                    >\n                                        Cancel\n                                    </button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"opacity-25 fixed inset-0 z-40 bg-black\" />\n                </>\n            ) : null }\n        </>\n    );\n};\n\nexport default EditModal;\n","/* eslint-disable jsx-a11y/click-events-have-key-events */\n/* eslint-disable jsx-a11y/no-static-element-interactions */\nimport React, { useState } from 'react';\n\nconst EditModal = () => {\n    const [ showModal, setShowModal ] = useState(false);\n\n    const toggleModal = () => {\n        setShowModal(!showModal);\n    };\n\n    return (\n        <>\n            <button type=\"button\" onClick={ toggleModal }>\n                <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"1\" d=\"M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z\" />\n                </svg>\n            </button>\n            { showModal ? (\n                <>\n                    <div\n                        className=\"modal_container\"\n                    >\n                        <div className=\"modal\">\n                            { /* content */ }\n                            <div className=\"section\">\n                                { /* header */ }\n                                <div className=\"modal_header\">\n                                    <h4>\n                                        Edit user\n                                    </h4>\n                                    <button\n                                        type=\"button\"\n                                        className=\"ml-auto bg-transparent border-0 float-right leading-none font-semibold outline-none focus:outline-none\"\n                                        onClick={ toggleModal }\n                                    >\n                                        <span className=\"bg-transparent h-6 w-6 text-2xl block outline-none focus:outline-none\">\n                                            ×\n                                        </span>\n                                    </button>\n                                </div>\n                                { /* body */ }\n                                <div className=\"md:col-span-2\">\n                                    <form action=\"#\" method=\"POST\">\n                                        <div className=\"grid_form_container\">\n                                            <div className=\"col-span-6 sm:col-span-3\">\n                                                <label className=\"input_label\">First name</label>\n                                                <input type=\"text\" name=\"firstName\" className=\"input\" />\n                                            </div>\n\n                                            <div className=\"col-span-6 sm:col-span-3\">\n                                                <label className=\"input_label\">Last name</label>\n                                                <input type=\"text\" name=\"lastName\" className=\"input\" />\n                                            </div>\n\n                                            <div className=\"col-span-6 sm:col-span-3\">\n                                                <label className=\"input_label\">Username</label>\n                                                <input type=\"text\" name=\"userName\" className=\"input\" />\n                                            </div>\n                                            <br />\n                                            <div className=\"col-span-6 sm:col-span-3\">\n                                                <label className=\"input_label\">Password</label>\n                                                <input type=\"text\" name=\"password\" className=\"input\" />\n                                            </div>\n\n                                            <div className=\"col-span-6 sm:col-span-3\">\n                                                <label className=\"input_label\">Password again</label>\n                                                <input type=\"text\" name=\"password\" className=\"input\" />\n                                            </div>\n\n                                            <div className=\"col-span-6 sm:col-span-3\">\n                                                <label className=\"input_label\">Access rights</label>\n                                                <select name=\"rights\" className=\"input\">\n                                                    <option>admin</option>\n                                                    <option>read only</option>\n                                                    <option>editing rights</option>\n                                                </select>\n                                            </div>\n\n                                            <div className=\"col-span-6 sm:col-span-3\">\n                                                <label className=\"input_label\">Status</label>\n                                                <select name=\"status\" className=\"input\">\n                                                    <option>active</option>\n                                                    <option>passive</option>\n                                                </select>\n                                            </div>\n\n                                            <div className=\"col-span-6\">\n                                                <label className=\"input_label\">Comments</label>\n                                                <textarea type=\"text\" name=\"comments\" className=\"input\" />\n                                            </div>\n                                        </div>\n                                        { /* buttons */ }\n                                        <div className=\"flex items-center justify-end\">\n                                            <button\n                                                className=\"btn bg-primary border-primary hover:bg-secondary hover:border-secondary ml-2 my-3\"\n                                                type=\"button\"\n                                                onClick={ toggleModal }\n                                            >\n                                                Save\n                                            </button>\n                                            <button\n                                                className=\"cancel_btn ml-2 my-3\"\n                                                type=\"button\"\n                                                onClick={ toggleModal }\n                                            >\n                                                Cancel\n                                            </button>\n                                        </div>\n                                    </form>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"opacity-25 fixed inset-0 z-40 bg-black\" />\n                </>\n            ) : null }\n        </>\n    );\n};\n\nexport default EditModal;\n","/* eslint-disable react/require-default-props */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport DeleteModal from './DeleteModal';\nimport EditModal from './EditModal';\n\nconst UserRow = (props) => {\n    const {\n        fullName,\n        userName,\n        comments,\n        rights,\n        status,\n    } = props;\n\n    return (\n        <tr className=\"text-gray-700\">\n            <td className=\"break-all table-data text-left\">{ fullName }</td>\n            <td className=\"table-data\">{ userName }</td>\n            <td className=\"table-data\">{ comments }</td>\n            <td className=\"table-data\">{ rights }</td>\n            <td className=\"table-data\">{ status }</td>\n            <td>\n                <EditModal />\n            </td>\n            <td>\n                <DeleteModal />\n            </td>\n        </tr>\n    );\n};\n\nUserRow.propTypes = {\n    fullName: PropTypes.string.isRequired,\n    userName: PropTypes.string.isRequired,\n    comments: PropTypes.string.isRequired,\n    rights: PropTypes.string.isRequired,\n    status: PropTypes.string.isRequired,\n};\n\nexport default UserRow;\n","import { useState } from 'react';\n\nconst useSearch = (type) => {\n    const [ value, setValue ] = useState('');\n\n    const onChange = (event) => {\n        setValue(event.target.value);\n    };\n\n    return {\n        type,\n        value,\n        onChange,\n    };\n};\n\nexport default useSearch;\n","/* eslint-disable react/jsx-props-no-spreading */\nimport React, { useEffect, useState } from 'react';\nimport Fuse from 'fuse.js';\nimport UserRow from '../comp/UserRow';\nimport UserData from '../data/UserData.json';\nimport useSearch from '../hooks/useSearch';\n\nconst UserControl = () => {\n    const [ users, setUsers ] = useState([]);\n    const [ sortConfig, setSortConfig ] = useState({ key: null, dir: 'asc' });\n\n    const options = {\n        minMatchCharLength: 2,\n        threshold: 0.4,\n        keys: [ 'fullName', 'userName' ],\n    };\n\n    const search = useSearch('text');\n\n    const mapUsers = (user) => {\n        return {\n            fullName: user.fullName,\n            userName: user.userName,\n            comments: user.comments,\n            rights: user.rights,\n            status: user.status,\n        };\n    };\n\n    useEffect(() => {\n        setUsers(UserData.map(mapUsers));\n    }, [ UserData ]);\n\n    const fuse = new Fuse(users, options);\n\n    const result = fuse.search(search.value);\n\n    const filteredUsers = (search.value !== '') ? result.map((a) => ({ ...a.item })) : users;\n\n    const sortedUsers = filteredUsers.sort((a, b) => {\n        if (sortConfig.key !== null) {\n            if (a[sortConfig.key] < b[sortConfig.key]) {\n                return (sortConfig.dir === 'asc') ? -1 : 1;\n            }\n\n            if (a[sortConfig.key] > b[sortConfig.key]) {\n                return (sortConfig.dir === 'asc') ? 1 : -1;\n            }\n\n            return 0;\n        }\n        return 0;\n    });\n\n    const requestSort = (key) => {\n        let dir = 'asc';\n\n        if (sortConfig.key === key && sortConfig.dir === 'asc') {\n            dir = 'desc';\n        }\n\n        setSortConfig({ key, dir });\n    };\n\n    const getClassName = (name) => (sortConfig.key === name ? `table-button sort-btn active ${ sortConfig.dir }` : 'table-button sort-btn');\n\n    return (\n        <>\n            <div className=\"list\">\n                <div>\n                    <input type=\"text\" placeholder=\"Search..\" { ...search } className=\"search border-b-2 mx-4 my-5\" />\n                </div>\n                <table className=\"w-full\">\n                    <thead>\n                        <tr>\n                            <th className=\"text-left min-w-xxxs table-heading\">\n                                <button type=\"button\" onClick={ () => requestSort('fullName') } className={ getClassName('fullName') }>\n                                    Name\n                                </button>\n                            </th>\n                            <th className=\"table-heading\">\n                                <button type=\"button\" onClick={ () => requestSort('userName') } className={ getClassName('userName') }>\n                                    Username\n                                </button>\n                            </th>\n                            <th className=\"table-heading\">\n                                <button type=\"button\" onClick={ () => requestSort('comments') } className={ getClassName('comments') }>\n                                    Comments\n                                </button>\n                            </th>\n                            <th className=\"table-heading\">\n                                <button type=\"button\" onClick={ () => requestSort('rights') } className={ getClassName('rights') }>\n                                    Access rights\n                                </button>\n                            </th>\n                            <th className=\"table-heading\">\n                                <button type=\"button\" onClick={ () => requestSort('status') } className={ getClassName('status') }>\n                                    Status\n                                </button>\n                            </th>\n                            <th className=\"table-heading\"> </th>\n                            <th className=\"table-heading\"> </th>\n                        </tr>\n                    </thead>\n                    <tbody className=\"bg-white divide-y\">\n                        {\n                            sortedUsers.map((user) => (\n                                <UserRow\n                                    key={ user.userName }\n                                    { ...user }\n                                />\n                            ))\n                        }\n                    </tbody>\n                </table>\n            </div>\n        </>\n    );\n};\n\nexport default UserControl;\n","/* eslint-disable react/require-default-props */\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nconst BalanceRow = (props) => {\n    const {\n        name,\n        code,\n        color,\n        prize,\n        storage,\n        ordered,\n        sold,\n    } = props;\n\n    return (\n        <tr className=\"text-gray-700\">\n            <td className=\"break-all table-data text-left\">{ name }</td>\n            <td className=\"table-data\">{ code }</td>\n            <td className=\"table-data\">{ color }</td>\n            <td className=\"table-data\">{ prize }</td>\n            <td className=\"table-data\">{ storage }</td>\n            <td className=\"table-data\">{ ordered }</td>\n            <td className=\"table-data\">{ sold }</td>\n        </tr>\n    );\n};\n\nBalanceRow.propTypes = {\n    name: PropTypes.string.isRequired,\n    code: PropTypes.string.isRequired,\n    color: PropTypes.string,\n    prize: PropTypes.number,\n    storage: PropTypes.number,\n    ordered: PropTypes.number,\n    sold: PropTypes.number,\n};\n\nexport default BalanceRow;\n","/* eslint-disable react/jsx-props-no-spreading */\nimport React, { useEffect, useState } from 'react';\n/* // For real data\nimport axios from 'axios';\nimport { io } from 'socket.io-client';\n*/\nimport Fuse from 'fuse.js';\n\nimport BalanceRow from '../comp/BalanceRow';\nimport useSearch from '../hooks/useSearch';\n\n// For mock data\nimport MockData from '../data/MOCK_DATA.json';\n\nconst Balance = () => {\n    const [ items, setItems ] = useState([]);\n    const [ sortConfig, setSortConfig ] = useState({ key: null, dir: 'asc' });\n    const [ loading, setLoading ] = useState(true);\n    /* // For real data\n    const [ socket, setSocket ] = useState(null);\n    */\n\n    const options = {\n        minMatchCharLength: 2,\n        threshold: 0.4,\n        keys: [ 'name', 'code' ],\n    };\n\n    const search = useSearch('text');\n\n    // For mock data\n    const mapBalance = (item) => {\n        return {\n            name: item.name,\n            code: item.code,\n            color: item.color,\n            prize: item.prize,\n            storage: item.storage,\n            ordered: item.ordered,\n            sold: item.sold,\n        };\n    };\n\n    // For mock data\n    useEffect(() => {\n        setItems(MockData.map(mapBalance));\n        setLoading(false);\n    }, [ MockData ]);\n\n    /* // For real data\n    useEffect(() => {\n        axios\n            .get(process.env.REACT_APP_API_URL)\n            .then((response) => {\n                setItems(response.data.map(mapBalance));\n            });\n        setSocket(io('http://localhost:3001', {\n            query: {\n                source: 'view',\n            },\n        }));\n    }, []); */\n\n    /* // For real data\n    useEffect(() => {\n        if (!socket) return;\n\n        socket.on('data-update', () => {\n        });\n    }, [ socket ]); */\n\n    if (loading) {\n        return (\n            <div className=\"bg-white rounded-lg shadow mt-6 p-4 h-16 flex justify-center items-center\">\n                <svg className=\"animate-spin -ml-1 mr-3 h-5 w-5 text-primary\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\n                    <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\" />\n                    <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\" />\n                </svg>\n                Collecting data\n            </div>\n        );\n    }\n\n    const fuse = new Fuse(items, options);\n\n    const result = fuse.search(search.value);\n\n    const filteredItems = (search.value !== '') ? result.map((a) => ({ ...a.item })) : items;\n\n    const sortedItems = filteredItems.sort((a, b) => {\n        if (sortConfig.key !== null) {\n            if (a[sortConfig.key] < b[sortConfig.key]) {\n                return (sortConfig.dir === 'asc') ? -1 : 1;\n            }\n\n            if (a[sortConfig.key] > b[sortConfig.key]) {\n                return (sortConfig.dir === 'asc') ? 1 : -1;\n            }\n\n            return 0;\n        }\n        return 0;\n    });\n\n    const requestSort = (key) => {\n        let dir = 'asc';\n\n        if (sortConfig.key === key && sortConfig.dir === 'asc') {\n            dir = 'desc';\n        }\n\n        setSortConfig({ key, dir });\n    };\n\n    const getClassName = (name) => (sortConfig.key === name ? `table-button sort-btn active ${ sortConfig.dir }` : 'table-button sort-btn');\n\n    return (\n        <div className=\"list\">\n            <div>\n                <input type=\"text\" placeholder=\"Search..\" { ...search } className=\"search border-b-2 mx-4 my-5\" />\n            </div>\n            <table className=\"w-full\">\n                <thead>\n                    <tr>\n                        <th className=\"text-left min-w-xxs table-heading\">\n                            <button type=\"button\" onClick={ () => requestSort('name') } className={ getClassName('name') }>\n                                Product name\n                            </button>\n                        </th>\n                        <th className=\"table-heading\">\n                            <button type=\"button\" onClick={ () => requestSort('code') } className={ getClassName('code') }>\n                                Product code\n                            </button>\n                        </th>\n                        <th className=\"table-heading\">\n                            <button type=\"button\" onClick={ () => requestSort('color') } className={ getClassName('color') }>\n                                Color\n                            </button>\n                        </th>\n                        <th className=\"table-heading\">\n                            <button type=\"button\" onClick={ () => requestSort('prize') } className={ getClassName('prize') }>\n                                Prize\n                            </button>\n                        </th>\n                        <th className=\"table-heading\">\n                            <button type=\"button\" onClick={ () => requestSort('storage') } className={ getClassName('storage') }>\n                                Storage quantity\n                            </button>\n                        </th>\n                        <th className=\"table-heading\">\n                            <button type=\"button\" onClick={ () => requestSort('ordered') } className={ getClassName('ordered') }>\n                                Ordered\n                            </button>\n                        </th>\n                        <th className=\"table-heading\">\n                            <button type=\"button\" onClick={ () => requestSort('sold') } className={ getClassName('sold') }>\n                                Sold\n                            </button>\n                        </th>\n                    </tr>\n                </thead>\n                <tbody className=\"bg-white divide-y\">\n                    {\n                        sortedItems.map((item) => (\n                            <BalanceRow\n                                key={ item.code }\n                                { ...item }\n                            />\n                        ))\n                    }\n                </tbody>\n            </table>\n\n        </div>\n    );\n};\n\nexport default Balance;\n","import React from 'react';\r\n\r\nconst Home = () => {\r\n    return (\r\n        <div className=\"grid grid-flow-row auto-rows-max py-6 gap-6\">\r\n            <div className=\"grid grid-cols-1 gap-6 lg:grid-cols-2 xl:grid-cols-3\">\r\n                <div className=\"section flex flex-col items-center m-0\">\r\n                    <h4>Welcome</h4>\r\n                    <p className=\"py-4\">If you press the button below, nothing will happen.</p>\r\n                    <button type=\"button\" className=\"btn bg-primary border-primary hover:bg-secondary hover:border-secondary mt-auto\">\r\n                        Press me\r\n                    </button>\r\n                </div>\r\n                <div className=\"section flex flex-col items-center m-0\">\r\n                    <h4>Info</h4>\r\n                    <p className=\"py-4\">This is just a dummy site. You can search and sort the product info and users, but you can not edit or delete users.</p>\r\n                    <button type=\"button\" className=\"btn bg-primary border-primary hover:bg-secondary hover:border-secondary mt-auto\">\r\n                        Press me\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Home;\r\n","/* eslint-disable max-len */\nimport React from 'react';\n\nconst Settings = () => {\n    return (\n        <div className=\"grid grid-flow-row auto-rows-max py-6 gap-6\">\n            <div className=\"grid grid-cols-1 gap-6 lg:grid-cols-2 xl:grid-cols-3\">\n                <div className=\"section flex flex-col items-center m-0\">\n                    <h4>Heading</h4>\n                    <p className=\"py-4\">If you press the button below, nothing will happen.</p>\n                    <button type=\"button\" className=\"btn bg-primary border-primary hover:bg-secondary hover:border-secondary mt-auto\">\n                        Press me\n                    </button>\n                </div>\n                <div className=\"section flex flex-col items-center m-0\">\n                    <h4>Second heading</h4>\n                    <p className=\"py-4\">\n                        Lorem ipsum dolor sit amet, consectetuer adipiscing elit.\n                        Sed posuere interdum sem.\n                        Quisque ligula eros ullamcorper quis, lacinia quis facilisis sed sapien.\n                        Lorem ipsum dolor sit amet, consectetuer adipiscing elit.\n                    </p>\n                    <button type=\"button\" className=\"btn bg-primary border-primary hover:bg-secondary hover:border-secondary mt-auto\">\n                        Press me\n                    </button>\n                </div>\n                <div className=\"section flex flex-col items-center m-0\">\n                    <h4>Third heading</h4>\n                    <p className=\"py-4\">Lorem ipsum dolor sit amet, consectetuer adipiscing elit.</p>\n                    <button type=\"button\" className=\"btn bg-primary border-primary hover:bg-secondary hover:border-secondary mt-auto\">\n                        Press me\n                    </button>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Settings;\n","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Nav from './comp/Nav';\nimport TopBar from './comp/TopBar';\nimport UserControl from './views/UserControl';\nimport Balance from './views/Balance';\nimport Home from './views/Home';\nimport Settings from './views/Settings';\n\nconst App = () => {\n    return (\n        <Router>\n            <div className=\"flex h-screen bg-gray-100\">\n                <Nav />\n                <div className=\"flex flex-col flex-1 w-full\">\n                    <TopBar />\n                    <div className=\"h-full overflow-y-auto\">\n                        <div className=\"h-full px-6 pb-5 mx-auto grid\">\n                            <Switch>\n                                <Route path=\"/uni-client-app\" exact component={ Home } />\n                                <Route path=\"/uni-client-app/home\" component={ Home } />\n                                <Route path=\"/uni-client-app/balance\" component={ Balance } />\n                                <Route path=\"/uni-client-app/user\" component={ UserControl } />\n                                <Route path=\"/uni-client-app/settings\" component={ Settings } />\n                            </Switch>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </Router>\n    );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './styles/index.css';\n\nimport App from './App';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n"],"sourceRoot":""}